{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hillel nagid\\\\Desktop\\\\rhythm\\\\pages\\\\TracksResults.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport Audio from './Audio';\n\nvar TracksResults = function TracksResults(props) {\n  _s();\n\n  var trackRef = React.createRef();\n  var analysis;\n\n  var _React$useState = React.useState(analysis),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sa = _React$useState2[0],\n      sas = _React$useState2[1];\n\n  var getAnalysis = function getAnalysis(e) {\n    axios.get('https://api.spotify.com/v1/audio-analysis/' + e.target.id, {\n      headers: {\n        Authorization: props.authorization\n      }\n    }).then(function (data) {\n      sas(data.data);\n      console.log(analysis);\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  };\n\n  return __jsx(\"ul\", {\n    ref: trackRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, props.tracks.map(function (track) {\n    return __jsx(\"li\", {\n      id: track.id,\n      key: track.id,\n      onClick: getAnalysis,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }\n    }, track.name, \" - \", track.artists[0].name, \" (\", track.popularity, \")\");\n  }), __jsx(Audio, {\n    analysis: sa,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }));\n};\n\n_s(TracksResults, \"qZV8DantEtKXqbOuCbt3F8H1ypY=\");\n\n_c = TracksResults;\nexport default TracksResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"TracksResults\");","map":{"version":3,"sources":["C:/Users/hillel nagid/Desktop/rhythm/pages/TracksResults.js"],"names":["axios","Audio","TracksResults","props","trackRef","React","createRef","analysis","useState","sa","sas","getAnalysis","e","get","target","id","headers","Authorization","authorization","then","data","console","log","err","tracks","map","track","name","artists","popularity"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA;;AAC9B,MAAMC,QAAQ,GAAGC,KAAK,CAACC,SAAN,EAAjB;AACA,MAAIC,QAAJ;;AAF8B,wBAGdF,KAAK,CAACG,QAAN,CAAeD,QAAf,CAHc;AAAA;AAAA,MAGzBE,EAHyB;AAAA,MAGrBC,GAHqB;;AAK9B,MAAIC,WAAW,GAAG,SAAdA,WAAc,CAAAC,CAAC,EAAI;AACtBZ,IAAAA,KAAK,CACHa,GADF,CACM,+CAA+CD,CAAC,CAACE,MAAF,CAASC,EAD9D,EACkE;AAChEC,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAEd,KAAK,CAACe;AADb;AADuD,KADlE,EAMEC,IANF,CAMO,UAAAC,IAAI,EAAI;AACbV,MAAAA,GAAG,CAACU,IAAI,CAACA,IAAN,CAAH;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACA,KATF,WAUQ,UAAAgB,GAAG,EAAI;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,KAZF;AAaA,GAdD;;AAgBA,SACC;AAAI,IAAA,GAAG,EAAEnB,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,KAAK,CAACqB,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK,EAAI;AAC1B,WACC;AAAI,MAAA,EAAE,EAAEA,KAAK,CAACX,EAAd;AAAkB,MAAA,GAAG,EAAEW,KAAK,CAACX,EAA7B;AAAiC,MAAA,OAAO,EAAEJ,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEe,KAAK,CAACC,IADR,SACiBD,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiBD,IADlC,QAC0CD,KAAK,CAACG,UADhD,MADD;AAKA,GANA,CADF,EASC,MAAC,KAAD;AAAO,IAAA,QAAQ,EAAEpB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,CADD;AAaA,CAlCD;;GAAMP,a;;KAAAA,a;AAoCN,eAAeA,aAAf","sourcesContent":["import axios from 'axios';\r\nimport Audio from './Audio';\r\nconst TracksResults = props => {\r\n\tconst trackRef = React.createRef();\r\n\tlet analysis;\r\n\tlet [sa, sas] = React.useState(analysis);\r\n\r\n\tlet getAnalysis = e => {\r\n\t\taxios\r\n\t\t\t.get('https://api.spotify.com/v1/audio-analysis/' + e.target.id, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: props.authorization\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tsas(data.data);\r\n\t\t\t\tconsole.log(analysis);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ul ref={trackRef}>\r\n\t\t\t{props.tracks.map(track => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li id={track.id} key={track.id} onClick={getAnalysis}>\r\n\t\t\t\t\t\t{track.name} - {track.artists[0].name} ({track.popularity})\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t{}\r\n\t\t\t<Audio analysis={sa}></Audio>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default TracksResults;\r\n"]},"metadata":{},"sourceType":"module"}