{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragmant, Component } from 'react';\nimport axios from 'axios';\nimport TracksResults from './TracksResults';\n\nclass Rhythm extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"getTracks\", () => {\n      axios.get(`https://api.spotify.com/v1/search?q=${this.state.query}&type=track&limit=5`, {\n        headers: {\n          Authorization: `${this.state.token_type} ${this.state.token}`\n        }\n      }).then(data => {\n        this.setState({\n          track_list: data.data.tracks.items\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(this, \"changeHandler\", () => {\n      this.setState({\n        query: this.search.value\n      }, () => {\n        if (this.state.query && this.state.query.length > 1) {\n          this.getTracks();\n        } else {\n          this.setState({\n            track_list: []\n          });\n        }\n      });\n    });\n\n    this.state = {\n      token: null,\n      track_list: [],\n      query: ''\n    };\n  }\n\n  componentDidMount() {\n    const hash = window.location.hash.substring(1).split('&').reduce((initial, item) => {\n      if (item) {\n        var parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    this.setState({\n      token: hash.access_token,\n      token_type: hash.token_type\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, !this.state.token && __jsx(\"button\", null, __jsx(\"a\", {\n      href: \"https://accounts.spotify.com/authorize?client_id=58b9c4063c904cda87af80186a732f01&redirect_uri=http:%2F%2Flocalhost:3000&response_type=token\"\n    }, \"Login With Spotify\")), this.state.token && __jsx(React.Fragment, null, __jsx(\"input\", {\n      ref: input => this.search = input,\n      onChange: this.changeHandler\n    }), __jsx(TracksResults, {\n      authorization: `${this.state.token_type} ${this.state.token}`,\n      tracks: this.state.track_list\n    })));\n  }\n\n}\n\nexport default Rhythm;","map":null,"metadata":{},"sourceType":"module"}