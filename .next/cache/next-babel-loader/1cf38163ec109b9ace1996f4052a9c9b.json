{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hillel nagid\\\\Desktop\\\\rhythm\\\\pages\\\\rhythm.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragmant, Component } from 'react'; //import { SpotifyApiContext, Search } from 'react-spotify-api';\n\nimport axios from 'axios';\n/*class Rhythm extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SpotifyApiContext.Provider value={`58b9c4063c904cda87af80186a732f01`}>\r\n\t\t\t\t<Search query={songName} track>\r\n\t\t\t\t\t{(data, loading, error) =>\r\n\t\t\t\t\t\tdata ? (\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t{data.tracks.items.map(song => {\r\n\t\t\t\t\t\t\t\t\t<li key={song.id}>{song.name}</li>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t) : null\r\n\t\t\t\t\t}\r\n\t\t\t\t</Search>\r\n\t\t\t</SpotifyApiContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rhythm;\r\n*/\n\nclass Rhythm extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"getTracks\", input => {\n      axios.get(`https://api.spotify.com/v1/search?q=${input}&type=track&limit=5`, {\n        headers: {\n          Authorization: `${this.state.token_type} ${this.state.token}`\n        }\n      }).then(data => {\n        console.log(this.state.tracks_list);\n        return data.data.tracks.items;\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(this, \"changeHandler\", e => {\n      let inputVal = e.target.value;\n      console.log(inputVal);\n      this.setState({\n        searchIn: inputVal\n      });\n      this.setState({\n        tracks_list: this.getTracks(inputVal)\n      });\n    });\n\n    this.state = {\n      token: null,\n      tracks_list: [],\n      searchIn: ''\n    };\n  }\n\n  componentDidMount() {\n    const hash = window.location.hash.substring(1).split('&').reduce((initial, item) => {\n      if (item) {\n        var parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    this.setState({\n      token: hash.access_token,\n      token_type: hash.token_type\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, !this.state.token && __jsx(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    }, __jsx(\"a\", {\n      href: \"https://accounts.spotify.com/authorize?client_id=58b9c4063c904cda87af80186a732f01&redirect_uri=http:%2F%2Flocalhost:3000&response_type=token\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, \"Login With Spotify\")), this.state.token && __jsx(React.Fragment, null, __jsx(\"input\", {\n      onChange: this.changeHandler,\n      value: this.state.searchIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }), __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, this.state.tracks_list.map(track => {\n      __jsx(\"li\", {\n        key: track.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, track.name);\n    }))));\n  }\n\n}\n\nexport default Rhythm;","map":{"version":3,"sources":["C:/Users/hillel nagid/Desktop/rhythm/pages/rhythm.js"],"names":["React","Fragmant","Component","axios","Rhythm","constructor","input","get","headers","Authorization","state","token_type","token","then","data","console","log","tracks_list","tracks","items","catch","err","e","inputVal","target","value","setState","searchIn","getTracks","componentDidMount","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","access_token","render","changeHandler","map","track","id","name"],"mappings":"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","sourcesContent":["import React, { Fragmant, Component } from 'react';\r\n//import { SpotifyApiContext, Search } from 'react-spotify-api';\r\nimport axios from 'axios';\r\n\r\n/*class Rhythm extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SpotifyApiContext.Provider value={`58b9c4063c904cda87af80186a732f01`}>\r\n\t\t\t\t<Search query={songName} track>\r\n\t\t\t\t\t{(data, loading, error) =>\r\n\t\t\t\t\t\tdata ? (\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t{data.tracks.items.map(song => {\r\n\t\t\t\t\t\t\t\t\t<li key={song.id}>{song.name}</li>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t) : null\r\n\t\t\t\t\t}\r\n\t\t\t\t</Search>\r\n\t\t\t</SpotifyApiContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rhythm;\r\n*/\r\n\r\nclass Rhythm extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { token: null, tracks_list: [], searchIn: '' };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst hash = window.location.hash\r\n\t\t\t.substring(1)\r\n\t\t\t.split('&')\r\n\t\t\t.reduce((initial, item) => {\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\tvar parts = item.split('=');\r\n\t\t\t\t\tinitial[parts[0]] = decodeURIComponent(parts[1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn initial;\r\n\t\t\t}, {});\r\n\t\tthis.setState({ token: hash.access_token, token_type: hash.token_type });\r\n\t}\r\n\tgetTracks = input => {\r\n\t\taxios\r\n\t\t\t.get(`https://api.spotify.com/v1/search?q=${input}&type=track&limit=5`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `${this.state.token_type} ${this.state.token}`\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(this.state.tracks_list);\r\n\t\t\t\treturn data.data.tracks.items;\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tchangeHandler = e => {\r\n\t\tlet inputVal = e.target.value;\r\n\t\tconsole.log(inputVal);\r\n\r\n\t\tthis.setState({ searchIn: inputVal });\r\n\t\tthis.setState({ tracks_list: this.getTracks(inputVal) });\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{!this.state.token && (\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<a href='https://accounts.spotify.com/authorize?client_id=58b9c4063c904cda87af80186a732f01&redirect_uri=http:%2F%2Flocalhost:3000&response_type=token'>\r\n\t\t\t\t\t\t\tLogin With Spotify\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t\t{this.state.token && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<input onChange={this.changeHandler} value={this.state.searchIn} />\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{this.state.tracks_list.map(track => {\r\n\t\t\t\t\t\t\t\t<li key={track.id}>{track.name}</li>;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rhythm;\r\n"]},"metadata":{},"sourceType":"module"}