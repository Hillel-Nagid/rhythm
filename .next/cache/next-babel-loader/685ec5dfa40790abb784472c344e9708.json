{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragmant, Component } from 'react';\nimport axios from 'axios';\nimport TracksResults from './TracksResults';\n\nvar Rhythm = /*#__PURE__*/function (_Component) {\n  _inherits(Rhythm, _Component);\n\n  var _super = _createSuper(Rhythm);\n\n  function Rhythm() {\n    var _this;\n\n    _classCallCheck(this, Rhythm);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"getTracks\", function () {\n      axios.get(\"https://api.spotify.com/v1/search?q=\".concat(_this.state.query, \"&type=track&limit=5\"), {\n        headers: {\n          Authorization: \"\".concat(_this.state.token_type, \" \").concat(_this.state.token)\n        }\n      }).then(function (data) {\n        _this.setState({\n          track_list: data.data.tracks.items\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeHandler\", function () {\n      _this.setState({\n        query: _this.search.value\n      }, function () {\n        if (_this.state.query && _this.state.query.length > 1) {\n          _this.getTracks();\n        } else {\n          _this.setState({\n            track_list: []\n          });\n        }\n      });\n    });\n\n    _this.state = {\n      token: null,\n      track_list: [],\n      query: ''\n    };\n    return _this;\n  }\n\n  _createClass(Rhythm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var hash = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\n        if (item) {\n          var parts = item.split('=');\n          initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n\n        return initial;\n      }, {});\n      this.setState({\n        token: hash.access_token,\n        token_type: hash.token_type\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, !this.state.token && __jsx(\"button\", null, __jsx(\"a\", {\n        href: \"https://accounts.spotify.com/authorize?client_id=58b9c4063c904cda87af80186a732f01&redirect_uri=http:%2F%2Flocalhost:3000&response_type=token\"\n      }, \"Login With Spotify\")), this.state.token && __jsx(React.Fragment, null, __jsx(\"input\", {\n        ref: function ref(input) {\n          return _this2.search = input;\n        },\n        onChange: this.changeHandler\n      }), __jsx(TracksResults, {\n        authorization: \"\".concat(this.state.token_type, \" \").concat(this.state.token),\n        tracks: this.state.track_list\n      })));\n    }\n  }]);\n\n  return Rhythm;\n}(Component);\n\nexport default Rhythm;","map":null,"metadata":{},"sourceType":"module"}