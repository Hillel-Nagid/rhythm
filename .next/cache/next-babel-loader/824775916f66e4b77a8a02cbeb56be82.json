{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hillel nagid\\\\Desktop\\\\rhythm\\\\pages\\\\Audio.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport BandJS from '../band.js/dist/band';\nexport var Audio = function Audio(props) {\n  function playHandler() {\n    var conductor = new BandJS();\n    var sectionsProps = [];\n    props.analysis.sections.forEach(function (section) {\n      sectionsProps.push([section.duration * 1000, section.tempo]);\n    });\n    var totalDuration = props.analysis.track.duration;\n    console.log(sectionsProps);\n    var totalPlay = conductor.setTickerCallback(function (secs) {\n      while (secs < totalDuration) {\n        setTimeout(function () {\n          player.stop();\n          sectionsProps.shift();\n          conductor.setTempo(sectionsProps[0][1]);\n        }, sectionsProps[0][0]);\n      }\n    });\n    conductor.setTimeSignature(4, 4);\n    conductor.setTempo(props.analysis.sections[0].tempo);\n    var piano = conductor.createInstrument('sine');\n    piano.note('quarter', 'A4');\n    var player = conductor.finish();\n    conductor.setOnFinishedCallback(function () {\n      player.loop(true);\n      player.play();\n    });\n  }\n\n  return __jsx(\"p\", {\n    onClick: playHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"click Me\");\n};\nexport default Audio;","map":{"version":3,"sources":["C:/Users/hillel nagid/Desktop/rhythm/pages/Audio.js"],"names":["BandJS","Audio","props","playHandler","conductor","sectionsProps","analysis","sections","forEach","section","push","duration","tempo","totalDuration","track","console","log","totalPlay","setTickerCallback","secs","setTimeout","player","stop","shift","setTempo","setTimeSignature","piano","createInstrument","note","finish","setOnFinishedCallback","loop","play"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAC/B,WAASC,WAAT,GAAuB;AACtB,QAAIC,SAAS,GAAG,IAAIJ,MAAJ,EAAhB;AACA,QAAIK,aAAa,GAAG,EAApB;AACAH,IAAAA,KAAK,CAACI,QAAN,CAAeC,QAAf,CAAwBC,OAAxB,CAAgC,UAACC,OAAD,EAAa;AAC5CJ,MAAAA,aAAa,CAACK,IAAd,CAAmB,CAACD,OAAO,CAACE,QAAR,GAAmB,IAApB,EAA0BF,OAAO,CAACG,KAAlC,CAAnB;AACA,KAFD;AAGA,QAAIC,aAAa,GAAGX,KAAK,CAACI,QAAN,CAAeQ,KAAf,CAAqBH,QAAzC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYX,aAAZ;AACA,QAAIY,SAAS,GAAGb,SAAS,CAACc,iBAAV,CAA4B,UAACC,IAAD,EAAU;AACrD,aAAOA,IAAI,GAAGN,aAAd,EAA6B;AAC5BO,QAAAA,UAAU,CAAC,YAAM;AAChBC,UAAAA,MAAM,CAACC,IAAP;AACAjB,UAAAA,aAAa,CAACkB,KAAd;AACAnB,UAAAA,SAAS,CAACoB,QAAV,CAAmBnB,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,CAAnB;AACA,SAJS,EAIPA,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,CAJO,CAAV;AAKA;AACD,KARe,CAAhB;AASAD,IAAAA,SAAS,CAACqB,gBAAV,CAA2B,CAA3B,EAA8B,CAA9B;AACArB,IAAAA,SAAS,CAACoB,QAAV,CAAmBtB,KAAK,CAACI,QAAN,CAAeC,QAAf,CAAwB,CAAxB,EAA2BK,KAA9C;AACA,QAAIc,KAAK,GAAGtB,SAAS,CAACuB,gBAAV,CAA2B,MAA3B,CAAZ;AACAD,IAAAA,KAAK,CAACE,IAAN,CAAW,SAAX,EAAsB,IAAtB;AACA,QAAIP,MAAM,GAAGjB,SAAS,CAACyB,MAAV,EAAb;AACAzB,IAAAA,SAAS,CAAC0B,qBAAV,CAAgC,YAAM;AACrCT,MAAAA,MAAM,CAACU,IAAP,CAAY,IAAZ;AACAV,MAAAA,MAAM,CAACW,IAAP;AACA,KAHD;AAIA;;AACD,SAAO;AAAG,IAAA,OAAO,EAAE7B,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,CA7BM;AA+BP,eAAeF,KAAf","sourcesContent":["import BandJS from '../band.js/dist/band';\r\n\r\nexport const Audio = (props) => {\r\n\tfunction playHandler() {\r\n\t\tlet conductor = new BandJS();\r\n\t\tlet sectionsProps = [];\r\n\t\tprops.analysis.sections.forEach((section) => {\r\n\t\t\tsectionsProps.push([section.duration * 1000, section.tempo]);\r\n\t\t});\r\n\t\tlet totalDuration = props.analysis.track.duration;\r\n\t\tconsole.log(sectionsProps);\r\n\t\tlet totalPlay = conductor.setTickerCallback((secs) => {\r\n\t\t\twhile (secs < totalDuration) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tplayer.stop();\r\n\t\t\t\t\tsectionsProps.shift();\r\n\t\t\t\t\tconductor.setTempo(sectionsProps[0][1]);\r\n\t\t\t\t}, sectionsProps[0][0]);\r\n\t\t\t}\r\n\t\t});\r\n\t\tconductor.setTimeSignature(4, 4);\r\n\t\tconductor.setTempo(props.analysis.sections[0].tempo);\r\n\t\tlet piano = conductor.createInstrument('sine');\r\n\t\tpiano.note('quarter', 'A4');\r\n\t\tlet player = conductor.finish();\r\n\t\tconductor.setOnFinishedCallback(() => {\r\n\t\t\tplayer.loop(true);\r\n\t\t\tplayer.play();\r\n\t\t});\r\n\t}\r\n\treturn <p onClick={playHandler}>click Me</p>;\r\n};\r\n\r\nexport default Audio;\r\n"]},"metadata":{},"sourceType":"module"}