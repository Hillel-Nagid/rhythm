{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport Audio from './Audio';\n\nvar TracksResults = function TracksResults(props) {\n  var trackRef = React.createRef();\n  var analysis;\n\n  var _React$useState = React.useState(analysis),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sa = _React$useState2[0],\n      sas = _React$useState2[1];\n\n  var getAnalysis = function getAnalysis(e) {\n    axios.get('https://api.spotify.com/v1/audio-analysis/' + e.target.id, {\n      headers: {\n        Authorization: props.authorization\n      }\n    }).then(function (data) {\n      sas(data.data);\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  };\n\n  return __jsx(\"ul\", {\n    ref: trackRef\n  }, props.tracks ? props.tracks.map(function (track) {\n    return __jsx(\"li\", {\n      id: track.id,\n      key: track.id,\n      onClick: getAnalysis\n    }, track.name, \" - \", track.artists[0].name, \" (\", track.popularity, \")\");\n  }) : '', __jsx(Audio, {\n    analysis: sa\n  }));\n};\n\nexport default TracksResults;","map":null,"metadata":{},"sourceType":"module"}